apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name | quote }}
  labels:
    app.kubernetes.io/name: hive-metastore
    app.kubernetes.io/component: metastore
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
data:
  metastore-site.xml: |
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
        {{- if .Values.s3.accessKey }}
        <property>
            <name>fs.s3a.access.key</name>
            <value>{{ .Values.s3.accessKey }}</value>
        </property>
        {{- end }}
        {{- if .Values.s3.secretKey }}
        <property>
            <name>fs.s3a.secret.key</name>
            <value>{{ .Values.s3.secretKey }}</value>
        </property>
        {{- end }}
        <property>
            <name>fs.s3a.aws.credentials.provider</name>
            <value>{{ .Values.s3.credentialsProvider }}</value>
        </property>
        <property>
            <name>fs.s3a.connection.ssl.enabled</name>
            <value>true</value>
        </property>
        <property>
            <name>fs.s3a.path.style.access</name>
            <value>true</value>
        </property>
        {{- if not .Values.postgresql.enabled }}
          <property>
              <name>javax.jdo.option.ConnectionURL</name>
              <value>jdbc:postgresql://{{ .Values.externalPostgresql.host }}:{{ .Values.externalPostgresql.port }}/{{ .Values.externalPostgresql.auth.database }}</value>
          </property>
          {{- if .Values.externalPostgresql.auth.username }}
          <property>
              <name>javax.jdo.option.ConnectionUserName</name>
              <value>{{ .Values.externalPostgresql.auth.username }}</value>
          </property>
          {{- end }}
          {{- if .Values.externalPostgresql.auth.password }}
          <property>
              <name>javax.jdo.option.ConnectionPassword</name>
              <value>{{ .Values.externalPostgresql.auth.password }}</value>
          </property>
          {{- end }}
        {{- else }}
          <property>
              <name>javax.jdo.option.ConnectionURL</name>
              <value>jdbc:postgresql://{{ .Release.Name }}-postgresql/{{ .Values.postgresql.auth.database }}</value>
          </property>
          {{- if .Values.postgresql.auth.username }}
          <property>
              <name>javax.jdo.option.ConnectionUserName</name>
              <value>{{ .Values.postgresql.auth.username }}</value>
          </property>
          {{- end }}
          {{- if .Values.postgresql.auth.password }}
          <property>
              <name>javax.jdo.option.ConnectionPassword</name>
              <value>{{ .Values.postgresql.auth.password }}</value>
          </property>
          {{- end }}
        {{- end }}
        <property>
            <name>javax.jdo.option.ConnectionDriverName</name>
            <value>org.postgresql.Driver</value>
        </property>
        <property>
            <name>hive.metastore.event.db.notification.api.auth</name>
            <value>false</value>
        </property>
        <property>
          <name>datanucleus.autoCreateSchema</name>
          <value>false</value>
        </property>
        <property>
            <name>metastore.thrift.uris</name>
            <value>thrift://{{ .Release.Name }}:9083</value>
        </property>
        <property>
            <name>metastore.task.threads.always</name>
            <value>org.apache.hadoop.hive.metastore.events.EventCleanerTask</value>
        </property>
        <property>
            <name>metastore.expression.proxy</name>
            <value>org.apache.hadoop.hive.metastore.DefaultPartitionExpressionProxy</value>
        </property>
        <property>
            <name>metastore.warehouse.dir</name>
            <value>/user/hive/warehouse</value>
        </property>
        <property>
            <name>mapreduce.map.memory.mb</name>
            <value>{{ .Values.heapsize }}</value>
        </property>
        <property>
            <name>mapreduce.reduce.memory.mb</name>
            <value>{{ .Values.heapsize }}</value>
        </property>
        <property>
            <name>mapreduce.map.java.opts</name>
            <value>-Xmx{{ div (mul .Values.heapsize 3) 4 }}m</value>
        </property>
        <property>
            <name>mapreduce.reduce.java.opts</name>
            <value>-Xmx{{ div (mul .Values.heapsize 3) 4 }}m</value>
        </property>
    </configuration>
  metastore-log4j2.properties: |
    status = INFO
    name = MetastoreLog4j2
    packages = org.apache.hadoop.hive.metastore

    # list of properties
    property.metastore.log.level = INFO
    property.metastore.root.logger = DRFA
    property.metastore.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}
    property.metastore.log.file = metastore.log
    property.hive.perflogger.log.level = INFO

    # list of all appenders
    appenders = console, DRFA

    # console appender
    appender.console.type = Console
    appender.console.name = console
    appender.console.target = SYSTEM_ERR
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n

    # daily rolling file appender
    appender.DRFA.type = RollingRandomAccessFile
    appender.DRFA.name = DRFA
    appender.DRFA.fileName = ${sys:metastore.log.dir}/${sys:metastore.log.file}
    # Use %pid in the filePattern to append <process-id>@<host-name> to the filename if you want separate log files for different CLI session
    appender.DRFA.filePattern = ${sys:metastore.log.dir}/${sys:metastore.log.file}.%d{yyyy-MM-dd}
    appender.DRFA.layout.type = PatternLayout
    appender.DRFA.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n
    appender.DRFA.policies.type = Policies
    appender.DRFA.policies.time.type = TimeBasedTriggeringPolicy
    appender.DRFA.policies.time.interval = 1
    appender.DRFA.policies.time.modulate = true
    appender.DRFA.strategy.type = DefaultRolloverStrategy
    appender.DRFA.strategy.max = 30

    # list of all loggers
    loggers = DataNucleus, Datastore, JPOX, PerfLogger

    logger.DataNucleus.name = DataNucleus
    logger.DataNucleus.level = ERROR

    logger.Datastore.name = Datastore
    logger.Datastore.level = ERROR

    logger.JPOX.name = JPOX
    logger.JPOX.level = ERROR

    logger.PerfLogger.name = org.apache.hadoop.hive.ql.log.PerfLogger
    logger.PerfLogger.level = ${sys:hive.perflogger.log.level}

    # root logger
    rootLogger.level = ${sys:metastore.log.level}
    rootLogger.appenderRefs = root
    rootLogger.appenderRef.root.ref = ${sys:metastore.root.logger}
